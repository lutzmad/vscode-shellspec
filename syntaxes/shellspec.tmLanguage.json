{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "shellspec",
	"patterns": [{ "include": "#todos" },
		{ "include": "#hooks" },
		{ "include": "#skips" },
		{ "include": "#helpers"},
		{ "include": "#directives"},
		{ "include": "#describes" },
		{ "include": "#strings" },
		{ "include": "#values" },
		{ "include": "#comments" },
		{ "include": "#constants"
	}],
	"repository": {
		"expressions": {
			"patterns": [{ "include": "#todos" },
				{ "include": "#hooks" },
				{ "include": "#skips" },
				{ "include": "#helpers"},
				{ "include": "#directives"},
				{ "include": "#describes" },
				{ "include": "#examples" },
				{ "include": "#strings" },
				{ "include": "#values" },
				{ "include": "#comments" },
				{ "include": "#constants"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.shellspec",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"describes": {
			"comment": "Shellspec describes",
			"patterns": [{
				"begin": "\\b((f|x)?Describe|(f|x)?Context|(f|x)?ExampleGroup)\\b",
				"end": "\\b(End)\\b",
				"beginCaptures": {
					"1": { "name": "keyword.control.shellspec" }
				},
                "endCaptures": {
                    "1": { "name": "keyword.control.shellspec" }
                },
				"patterns": [{ "include": "#expressions" }]
            }]
		},
		"examples": {
			"comment": "Shellspec examples",
        	"patterns": [{
				"begin": "\\b((f|x)?It|(f|x)?Specify|(f|x)?Example)\\b",
				"end": "\\b(End)\\b",
				"beginCaptures": {
					"1": { "name": "keyword.control.shellspec" }
				},
                "endCaptures": {
                    "1": { "name": "keyword.control.shellspec" }
                },
				"patterns": [{ "include": "#todos" },
					{ "include": "#hooks" },
                    { "include": "#skips" },
					{ "include": "#helpers"},
					{ "include": "#directives"},
					{ "include": "#asserts" },
					{ "include": "#evaluations" },
					{ "include": "#expectations" },
					{ "include": "#strings" },
					{ "include": "#values" },
					{ "include": "#comments" },
					{ "include": "#constants"
				}]
            }]
		},
		"todos": {
			"comment": "Shellspec todos",
            "patterns": [{
                "name": "keyword.control.shellspec",
                "match": "\\b(Todo)\\b"
            }]
		},
		"evaluations": {
			"comment": "Shellspec evaluation",
            "patterns": [{
				"match": "\\b(When[ ]*(call|run[ ]*command|run[ ]*script|run[ ]*source|run))\\b",
				"captures": {
					"1": { "name": "keyword.control.shellspec" },
					"2": { "name": "keyword.control.shellspec" }
				}
            }]
		},
		"expectations": {
			"comment": "Shellspec expectation",
			"patterns": [{
				"begin": "\\b(The)\\b",
				"end": "\\b(should([ ]*not)*)\\b",
				"beginCaptures": {
					"1": { "name": "keyword.control.shellspec" }
				},
				"endCaptures": {
					"0": { "name": "keyword.control.shellspec" }
				},
				"patterns": [{ "include": "#modifiers" },
					{ "include": "#subjects" },
					{ "include": "#chains" },
					{ "include": "#strings" },
					{ "include": "#values"
				}]
            },{
                "match": "\\b(should([ ]*not)*)\\b",
				"captures": {
                    "0": { "name": "keyword.control.shellspec" }
                }
			},{ "include": "#matchers" },
				{ "include": "#chains" },
				{ "include": "#strings" },
				{ "include": "#values"
			}]
		},
		"subjects": {
			"comment": "Shellspec subjects",
            "patterns": [{
                "name": "keyword.other.shellspec",
                "match": "\\b(stdout|output|line|word|stderr|error|status|path|file|directory|value|function|variable)\\b"
            }]
		},
		"modifiers": {
			"comment": "Shellspec modifiers",
            "patterns": [{
                "name": "keyword.other.shellspec",
                "match": "\\b(line|lines|word|length|content|result)\\b"
            }]
		},
		"matchers": {
			"comment": "Shellspec matchers",
            "patterns": [{
                "name": "keyword.other.shellspec",
                "match": "\\b(satisfy|successful|exist)\\b"
			},{
                "name": "keyword.other.shellspec",
                "match": "\\b(be[ ]*(exist|file|directory|empty[ ]*file|empty[ ]*directory|symlink|pipe|socket|readable|writeable|executable|block[ ]*device|character[ ]*device))\\b"
			},{
                "name": "keyword.other.shellspec",
				"match": "\\b((have|has)[ ]*(setgid|setuid))\\b"
			},{
                "name": "keyword.other.shellspec",
				"match": "\\b(be[ ]*(|success|failure))\\b"	
			},{
                "name": "keyword.other.shellspec",
				"match": "\\b(equal|eq|start[ ]*with|end[ ]*with|include|match[ ]*pattern|match)\\b"
			},{
                "name": "keyword.other.shellspec",
				"match": "\\b(be[ ]*valid[ ]*(number|funcname))\\b"
			},{
                "name": "keyword.other.shellspec",
				"match": "\\b(be[ ]*(defined|undefined|present|blank|exported|readonly))\\b"
	        }]
		},
		"chains": {
			"comment": "Shellspec language chains",
			"patterns": [{
				"name": "keyword.other.shellspec",
				"match": "\\b(of|the|as|an|a)\\b"
			}]
		},
		"asserts": {
			"comment": "Shellspec asserts",
            "patterns": [{
                "name": "keyword.control.shellspec",
                "match": "\\b(Assert)\\b"
            }]
		},
		"skips": {
			"comment": "Shellspec skips",
            "patterns": [{
                "name": "keyword.control.shellspec",
                "match": "\\b(Pending|Skip[ ]*if|Skip|Todo)\\b"
			},{ "include": "#conditions"
            }]
		},
		"hooks": {
			"comment": "Shellspec hooks",
            "patterns": [{
                "name": "keyword.control.shellspec",
                "match": "\\b(BeforeEach|AfterEach|BeforeAll|AfterAll|BeforeCall|AfterCall|BeforeRun|AfterRun|Before|After)\\b"
            }]
		},
		"helpers": {
			"comment": "Shellspec helpers",
            "patterns": [{
                "name": "keyword.control.shellspec",
                "match": "\\b(Dump)\\b"
			},{
				"name": "keyword.control.shellspec",
                "match": "\\b(Include)\\b"
			},{
				"name": "keyword.control.shellspec",
                "match": "\\b(Set)\\b"
			},{
				"name": "keyword.control.shellspec",
                "match": "\\b(Path|File|Dir)\\b"
			},{
				"begin": "Data",
				"end": "End",
				"captures": {
                    "0": { "name": "constant.control.shellspec" }
                },
				"patterns": [{ "include": "#strings" },
					{ "include": "#comments"
				}]
			},{
				"begin": "Parameters",
				"end": "End",
				"captures": {
                    "0": { "name": "constant.control.shellspec" }
                },
				"patterns": [{ "include": "#strings" },
					{ "include": "#comments"
				}]
			},{
				"begin": "Mock",
				"end": "End",
				"captures": {
					"0": { "name": "constant.control.shellspec" }
				},
				"patterns": [{ "include": "#strings" },
					{ "include": "#comments"
				}]
			},{
				"name": "keyword.control.shellspec",
				"match": "\\b(Intercept)\\b"
            }]
		},
		"directives": {
			"comment": "Shellspec directives",
            "patterns": [{
                "name": "string.other.shellspec",
                "match": "\\b(%const|%)\\b"
			},{
                "name": "string.other.shellspec",
                "match": "\\b(%text)\\b"
			},{
				"name": "string.other.shellspec",
                "match": "\\b(%putsn|%=)\\b"
			},{
				"name": "string.other.shellspec",
				"match": "\\b(%puts|%-)\\b"
			},{
				"name": "string.other.shellspec",
				"match": "\\b(%logger)\\b"
			},{
				"name": "string.other.shellspec",
				"match": "\\b(%preserve)\\b"
			}]
		},
        "conditions": {
            "comment": "Shellspec skip conditions",
            "patterns": [{
				"name": "string.interpolated.shellspec",
				"begin": "\\[",
				"end": "\\]",
				"patterns": [{ "include": "source.shell"
				}]
            }]
		},
		"strings": {
			"comment": "Shellspec strings",
            "patterns": [{
            	"name": "string.quoted.other.shellspec",
                "begin": "`",
                "end": "`",
				"patterns": [{ 
                    "name": "constant.character.escape.shellspec",
                    "match": "\\\\."
                }]
            },{
				"name": "string.quoted.double.shellspec",
				"begin": "\"",
				"end": "\"",
				"patterns": [{ 
            		"name": "constant.character.escape.shellspec",
                	"match": "\\\\."
                }]
            },{
                "name": "string.quoted.single.shellspec",
                "begin": "'",
                "end": "'",
				"patterns": [{ 
                    "name": "constant.character.escape.shellspec",
                    "match": "\\\\."
                }]
        	}]
		},
		"values": {
			"comment": "Shellspec values",
			"patterns": [{
				"name": "constant.numeric.float.shellspec",
				"match": "\\b([+-]?\\d+\\.\\d+)\\b"
			},{
				"name": "constant.numeric.float.shellspec",
				"match": "\\b([+-]?\\d+\\.\\d+([eE][+-]?\\d+)?)\\b"
			},{
				"name": "constant.numeric.integer.shellspec",
				"match": "\\b([+-]?\\d+)\\b"
			}]
		},
        "comments": {
			"comment": "Shellspec comments",
			"patterns": [{
				"name": "comment.line.shellspec",
				"begin": "#",
				"end": "$",
				"captures": {
					"0": { "name": "comment.line.shellspec" }
				},
				"patterns": []
			}]
        },
        "commands": {
            "comment": "Shellspec shell commands",
            "patterns": [{
				"name": "string.quoted.other.shellspec",
				"begin": "`",
				"end": "`",
				"patterns": [{ "include": "source.shell"
				}]
			},{
				"include": "source.shell"
			}]
		},
		"functions": {
			"comment": "Shellspec functions",
            "patterns": [{
				"name": "support.function.shellspec",
				"begin": "[\\w\\d_]*\\(",
				"end": "\\)"
			}]
		},
		"constants": {
			"comment": "Shellspec constant keywords",
			"patterns": [{
				"name": "support.constant.shellspec",
				"match": "\\b(\\$)?(SHELLSPEC_ROOT|SHELLSPEC_LIB|SHELLSPEC_LIBEXEC|SHELLSPEC_TMPDIR|SHELLSPEC_TMPBASE|SHELLSPEC_WORKDIR|SHELLSPEC_PROJECT_ROOT|SHELLSPEC_SPECDIR|SHELLSPEC_HELPERDIR|SHELLSPEC_LOAD_PATH|SHELLSPEC_UNIXTIME|SHELLSPEC_SPECFILE|SHELLSPEC_SPEC_NO|SHELLSPEC_GROUP_ID|SHELLSPEC_EXAMPLE_ID|SHELLSPEC_EXAMPLE_NO)\\b"
			}]
		}
	},
	"scopeName": "source.shellspec"
}
